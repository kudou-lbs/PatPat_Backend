<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.games.tap.mapper.PostMapper">

    <select id="getPostByPId" resultType="com.games.tap.domain.Post">
        SELECT * FROM post WHERE pid=#{pid} LIMIT 1
    </select>

    <select id="getFIdByPId" resultType="java.lang.Long">
        SELECT fid FROM post WHERE pid=#{pid}
    </select>

    <select id="getPostInfo" resultType="com.games.tap.vo.PostInfo">
        SELECT fpost.*,f.name AS forum_name,avatar,IFNULL(level,1)AS level,
               IFNULL(nickname,'用户已注销') AS nickname,
        (CASE
            WHEN #{uid} IS null THEN false
        <if test="uid!=null ">
            WHEN pl.id IS null THEN false
        </if>
            ELSE true
        END) AS is_like,
        (CASE
            WHEN #{uid} IS null THEN false
        <if test="uid!=null ">
            WHEN c.id IS null THEN false
        </if>
            ELSE true
        END) AS is_collect,
        (CASE
        WHEN #{uid} IS null THEN false
        <if test="uid!=null ">
            WHEN cc.id IS null THEN false
        </if>
        ELSE true
        END) AS is_followed
        FROM (SELECT * FROM post WHERE pid=#{pid}) fpost
            LEFT JOIN user u ON fpost.uid = u.uid
            LEFT JOIN forum_user fu ON fpost.fid = fu.fid AND fpost.uid = fu.uid
            LEFT JOIN forum f ON fpost.fid = f.fid
        <if test="uid!=null ">
            LEFT JOIN post_like pl ON fpost.pid = pl.pid AND pl.uid = #{uid}
            LEFT JOIN collection c ON fpost.pid = c.pid AND c.uid= #{uid}
            LEFT JOIN concern cc ON cc.followed_uid=fpost.uid AND cc.following_uid=#{uid}
        </if>
        LIMIT 1
    </select>

    <select id="getRelatedPost" resultType="com.games.tap.vo.UserPostInfo">
        SELECT post.*,f.name AS forum_name,avatar,IFNULL(nickname,'用户已注销') AS nickname,
        (IF(pl.id IS null, false, true)) AS is_like,IFNULL(fu2.level,1)AS level
        FROM (SELECT fid FROM forum_user WHERE uid=#{uid} AND is_like=true)
            AS fu1 INNER JOIN post ON fu1.fid=post.fid
            LEFT JOIN user u ON post.uid = u.uid
            LEFT JOIN forum_user fu2 ON post.fid = fu2.fid AND post.uid = fu2.uid
            LEFT JOIN forum f ON post.fid = f.fid
            LEFT JOIN post_like pl ON post.pid = pl.pid AND pl.uid = #{uid}
        UNION
        SELECT post.*,f.name AS forum_name,avatar,IFNULL(nickname,'用户已注销') AS nickname,
        (IF(pl.id IS null, false, true)) AS is_like,IFNULL(fu2.level,1)AS level
        FROM (SELECT followed_uid FROM concern WHERE following_uid=#{uid})
            AS cc INNER JOIN post ON cc.followed_uid=post.uid
            LEFT JOIN user u ON post.uid = u.uid
            LEFT JOIN forum_user fu2 ON post.fid = fu2.fid AND post.uid = fu2.uid
            LEFT JOIN forum f ON post.fid = f.fid
            LEFT JOIN post_like pl ON post.pid = pl.pid AND pl.uid = #{uid}
        ORDER BY post_time DESC
        <if test="pageSize!=null ">
            LIMIT #{pageSize}
        </if>
        <if test="offset!=null ">
            OFFSET #{offset}
        </if>
    </select>

    <select id="getPostReplyList" resultType="com.games.tap.vo.ReplyInfo">
        SELECT r.rid, r.content, r.floor_num, r.like_num, r.post_time, r.reply_num, r.uid,
            IFNULL(nickname,'用户已注销') AS nickname, u.avatar, IFNULL(level,1)AS level,
        (CASE
            WHEN #{uid} IS null THEN false
        <if test="uid!=null ">
            WHEN rl.id IS null THEN false
        </if>
            ELSE true
        END) AS is_like
        FROM (SELECT * FROM reply WHERE pid=#{pid} AND is_floor=true)
            AS r LEFT JOIN (SELECT uid, nickname,avatar FROM user) u ON r.uid=u.uid
            LEFT JOIN forum_user fu ON fu.uid = u.uid AND fu.fid=r.fid
        <if test="uid!=null ">
            LEFT JOIN reply_like rl ON r.rid = rl.rid AND rl.uid = #{uid}
        </if>
        ORDER BY
        <choose>
            <when test="rank==0">floor_num</when>
            <when test="rank==1 ">floor_num DESC</when>
            <when test="rank==2 ">reply_num DESC</when>
        </choose>
        <if test="pageSize!=null ">
            LIMIT #{pageSize}
        </if>
        <if test="offset!=null ">
            OFFSET #{offset}
        </if>
    </select>
    <select id="getPicByPId" resultType="java.lang.String">
        select picture from post where pid=#{pid}
    </select>

    <update id="updateReadingNum">
        UPDATE post SET reading_num=reading_num+1 WHERE pid=#{pid}
    </update>

    <update id="addReplyNum">
        UPDATE post SET reply_num=reply_num+1 WHERE pid=#{pid}
    </update>

    <update id="subReplyNum">
        UPDATE post SET reply_num=
        <choose>
            <when test="num==null ">
                reply_num-1
            </when>
            <otherwise>
                reply_num-#{num}
            </otherwise>
        </choose>
        WHERE pid=#{pid}
    </update>

    <update id="updateLastDate">
        UPDATE post SET last_date=#{lastDate} WHERE pid=#{pid}
    </update>

    <insert id="insertPost" parameterType="com.games.tap.domain.Post" useGeneratedKeys="true" keyProperty="pId">
        INSERT INTO post (content, fid, last_date, post_time, title, uid, picture)
        VALUES (#{content},#{fId},#{lastDate},#{postTime},#{title},#{uId},#{picture})
    </insert>

    <delete id="deleteByPId">
        DELETE FROM post WHERE pid=#{pid};
        DELETE FROM reply WHERE pid=#{pid};
    </delete>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.games.tap.mapper.UserMapper">

    <select id="getAllUser" resultType="com.games.tap.domain.User">
        select * from user
    </select>

    <select id="getUserList" resultType="com.games.tap.vo.UserInfo">
        SELECT uid,nickname,avatar,intro,fans_num
        FROM user WHERE fans_num>=0 ORDER BY fans_num DESC
        <if test="pageSize!=null ">
            LIMIT #{pageSize}
        </if>
        <if test="offset!=null ">
            OFFSET #{offset}
        </if>
    </select>

    <select id="getUserPostList" resultType="com.games.tap.vo.UserPostInfo">
        SELECT fpost.*,f.name AS forum_name,avatar,IFNULL(nickname,'用户已注销') AS nickname,
        (CASE
        WHEN #{uid} IS null THEN false
        <if test="uid!=null ">
            WHEN pl.id IS null THEN false
        </if>
            ELSE true
        END) AS is_like, IFNULL(level,1)AS level
        FROM (SELECT * FROM post
        <where>
            <if test="uid!=null and rank!=3 ">
                uid=#{uid}
            </if>
            <if test="rank==3 ">
                reading_num>=0 AND like_num>=0 ORDER BY reading_num,like_num LIMIT 10000
            </if>
        </where>) fpost
            LEFT JOIN user u ON fpost.uid = u.uid
            LEFT JOIN forum_user fu ON fpost.fid = fu.fid AND fpost.uid = fu.uid
            LEFT JOIN forum f ON fpost.fid = f.fid
        <if test="uid!=null ">
            LEFT JOIN post_like pl ON fpost.pid = pl.pid AND pl.uid = #{uid}
        </if>
        ORDER BY
        <choose>
            <when test="rank==1 ">post_time</when>
            <when test="rank==2 ">reply_num DESC</when>
            <when test="rank==3 ">RAND()</when>
            <otherwise>post_time DESC</otherwise>
        </choose>
        <if test="pageSize!=null ">
            LIMIT #{pageSize}
        </if>
        <if test="offset!=null ">
            OFFSET #{offset}
        </if>
    </select>

    <select id="getUserReplyList" resultType="com.games.tap.vo.UserReply">
        SELECT r.rid, r.content, r.like_num, r.floor_num, r.reply_num, r.post_time, r.fid,
        f.name, p.title AS r2title, p.content AS r2content, u1.avatar,
        IFNULL(level,1)AS level, IFNULL(u1.nickname,'用户已注销') AS nickname,
        IFNULL(u2.nickname,'用户已注销') AS r2name, r.reply_to_uid AS r2uid,
        (CASE
        WHEN #{wid} IS null THEN false
        <if test="wid!=null ">
            WHEN rl.id IS null THEN false
        </if>
        ELSE true
        END) AS is_like
        FROM (SELECT * FROM reply WHERE uid=#{uid})
        AS r LEFT JOIN (SELECT pid,title,content FROM post) p ON p.pid=r.pid
        LEFT JOIN (SELECT uid,nickname,avatar FROM user) u1 ON u1.uid=#{uid}
        LEFT JOIN (SELECT uid, nickname FROM user) u2 ON r.reply_to_uid = u2.uid
        LEFT JOIN forum_user fu ON fu.uid = #{uid} AND fu.fid=r.fid
        LEFT JOIN (SELECT fid,name FROM forum) f on fu.fid = f.fid
        <if test="wid!=null ">
            LEFT JOIN reply_like rl ON r.rid = rl.rid AND rl.uid = #{wid}
        </if>
        ORDER BY post_time
        <if test="rank==0 ">DESC</if>
        <if test="pageSize!=null ">
            LIMIT #{pageSize}
        </if>
        <if test="offset!=null ">
            OFFSET #{offset}
        </if>
    </select>

    <select id="getUserLikeMessage" resultType="com.games.tap.vo.UserMessage">
        SELECT IFNULL(u.nickname,'用户已注销') AS nickname, u.avatar, u.uid,
        'post_like' AS type, pl.id AS lid, pl.pid AS jid,
        p.content AS u_content, p.title AS u_title
        FROM (SELECT pid,title,content FROM post WHERE uid=#{uid}) AS p
        INNER JOIN post_like pl ON pl.pid=p.pid
        LEFT JOIN (SELECT uid,nickname,avatar FROM user)AS u ON u.uid=pl.uid
        UNION
        SELECT IFNULL(u.nickname,'用户已注销') AS nickname, u.avatar, u.uid,
        'reply_like' AS type, rl.id AS lid, rl.rid AS jid,
        r.content AS u_content, null AS u_title
        FROM (SELECT rid,content FROM reply WHERE uid=#{uid}) AS r
        INNER JOIN reply_like rl ON rl.rid=r.rid
        LEFT JOIN (SELECT uid,nickname,avatar FROM user)AS u ON u.uid=rl.uid
        <if test="pageSize!=null ">
            LIMIT #{pageSize}
        </if>
        <if test="offset!=null ">
            OFFSET #{offset}
        </if>
    </select>

    <select id="getUserReplyMessage" resultType="com.games.tap.vo.UserMessage">
        SELECT IFNULL(u.nickname,'用户已注销') AS nickname, u.avatar, u.uid,
        'post_reply' AS type, p.pid AS jid, r.content AS content,r.post_time,
        p.content AS u_content, p.title AS u_title
        FROM (SELECT pid,title,content FROM post WHERE uid=#{uid}) AS p
        INNER JOIN (SELECT uid,pid,post_time,content FROM reply WHERE is_floor=true) r ON r.pid=p.pid
        LEFT JOIN (SELECT uid,nickname,avatar FROM user)AS u ON u.uid=r.uid
        UNION
        SELECT IFNULL(u.nickname,'用户已注销') AS nickname, u.avatar, r1.uid,
        'reply_reply' AS type, r1.rid AS jid, r1.content AS content, r1.post_time,
        r2.content AS u_content, null AS u_title
        FROM (SELECT rid,uid,post_time,reply_to_rid,floor_num,content FROM reply WHERE reply_to_uid=#{uid}) AS r1
        LEFT JOIN (SELECT rid,content FROM reply) r2 ON r1.reply_to_rid=r2.rid
        LEFT JOIN (SELECT uid,nickname,avatar FROM user)AS u ON u.uid=r1.uid
        <if test="pageSize!=null ">
            LIMIT #{pageSize}
        </if>
        <if test="offset!=null ">
            OFFSET #{offset}
        </if>
    </select>

    <select id="getUserAvatarById" resultType="java.lang.String">
        select avatar from user where uid=#{uId} LIMIT 1
    </select>

    <select id="getPasswordById" resultType="java.lang.String">
        select password from user where uid=#{id} LIMIT 1
    </select>

    <select id="getUsernameById" resultType="java.lang.String">
        SELECT username FROM user WHERE uid=#{id} LIMIT 1
    </select>

    <select id="getUserById" resultType="com.games.tap.domain.User">
        SELECT * FROM user WHERE uid=#{id} LIMIT 1
    </select>

    <select id="getUserByUserName" resultType="com.games.tap.domain.User">
        SELECT * FROM user WHERE username=#{name} LIMIT 1
    </select>
    <select id="getIdByUserName" resultType="java.lang.Long">
        SELECT uid FROM user WHERE username=#{name} LIMIT 1
    </select>
    <select id="getBackgroundById" resultType="java.lang.String">
        select background from user where uid=#{uId} LIMIT 1
    </select>

    <!--    <cache readOnly="true"/>-->
    <update id="updateUserAvatar">
        UPDATE user SET avatar= #{avatar} WHERE uid=#{uId}
    </update>
    <update id="updatePassword">
        update user set password=#{password} where uid=#{uId}
    </update>
    <update id="updateUser" parameterType="com.games.tap.domain.User">
        UPDATE user SET intro=#{intro},nickname=#{nickname},avatar=#{avatar},background=#{background},
                gender=#{gender},username=#{username},password=#{password} WHERE uid=#{uId}
    </update>
    <update id="updateBackground">
        UPDATE user SET background=#{background} WHERE uid=#{uId}
    </update>

    <insert id="insertUser" parameterType="com.games.tap.domain.User" useGeneratedKeys="true" keyProperty="uId">
        INSERT INTO user (username, password, nickname, gender,intro, register_time)
        VALUES (#{username}, #{password}, #{nickname}, #{gender}, #{intro},#{registerTime})
    </insert>

    <delete id="deleteUserById">
        DELETE FROM user WHERE uid=#{id};
        DELETE FROM collection WHERE uid=#{id};
        DELETE FROM forum_user WHERE uid=#{id};
    </delete>
</mapper>